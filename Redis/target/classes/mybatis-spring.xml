<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">
        
        
        <!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
        <context:property-placeholder location="classpath:db.properties" />
        
        
        
        <!-- 配置数据源 ，dbcp -->
        
        <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        </bean>


        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
        p:dataSource-ref="dataSource" 
        ></bean>
              <!-- Redis和缓存配置开始 -->  
            <!-- jedis 配置 -->  
            <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >  
                  <property name="maxIdle" value="100" />  
                  <property name="maxWaitMillis" value="1000" />  
                  <property name="testOnBorrow" value="true" />  
            </bean >  
            
            <!-- redis连接池 -->
                <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close">
                    <constructor-arg name="poolConfig" ref="poolConfig"/>
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="6379"/>
                </bean>

              <!-- redis服务器中心 -->  
            <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >  
                  <property name="poolConfig" ref="poolConfig" />  
                  <property name="port" value="6379" />  
                  <property name="hostName" value="127.0.0.1" />  
                  <!-- <property name="password" value="${redis.password}" /> --> 
                  <property name="timeout" value="10000" ></property>  
            </bean >  
            <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >  
                  <property name="connectionFactory" ref="connectionFactory" />  
                  <property name="keySerializer" >  
                      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
                  </property>  
                  <property name="valueSerializer" >  
                      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
                  </property>  
                  
                  <property name="hashKeySerializer">  
    					<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>  
				</property>    
				<property name="hashValueSerializer">  
    					<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>  
				</property>   
                  
                  
            </bean > 
            
            
            
            
            
           
            <!-- cache配置 -->  
             <bean id="getCache" class="com.spring_redis.cache.GetCacheAOP" >  
                   <property name="redisTemplate" ref="redisTemplate" />
             </bean>  
             
             <!-- Redis和缓存配置结束 -->
            
            <!-- mybatis mapper扫描器 -->
            <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
                <property name="basePackage" value="com.spring_redis.mapper"></property>
                <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
            </bean>
            
            <bean id="roomservice" class="com.spring_redis.service.impl.RoomServiceImpl" >  
                   
             </bean>  
            
</beans>
